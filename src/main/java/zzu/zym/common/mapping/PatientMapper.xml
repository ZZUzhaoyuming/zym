<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zzu.zym.common.dao.PatientMapper" >
  <resultMap id="BaseResultMap" type="zzu.zym.common.entity.Patient" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="patientname" property="patientname" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="medicalrecordsid" property="medicalrecordsid" jdbcType="VARCHAR" />
    <result column="doctorid" property="doctorid" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="professional" property="professional" jdbcType="VARCHAR" />
    <result column="workarea" property="workarea" jdbcType="VARCHAR" />
    <result column="marriage" property="marriage" jdbcType="VARCHAR" />
    <result column="nativeplace" property="nativeplace" jdbcType="VARCHAR" />
    <result column="national" property="national" jdbcType="VARCHAR" />
    <result column="power" property="power" jdbcType="VARCHAR" />
    <result column="bedid" property="bedid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, patientname, age, sex, address, medicalrecordsid, doctorid, picture, professional, 
    workarea, marriage, nativeplace, national, power, bedid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_patient
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_patient
    where patientname = #{patientname,jdbcType=VARCHAR}
  </select>

  <select id="selectAllPatient" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_patient
    where doctorid = #{doctorid,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_patient
  </select>

  <select id="selectMany" resultMap="BaseResultMap"  >
    select  t1.address as address,t2.cc as cc,count(t2.cc) as counts
    from t_patient t1 left join t_medicalrecords t2
    on t1. medicalrecordsid = t2.id
    group by t2.cc

  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_patient
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="zzu.zym.common.entity.Patient" >
    insert into t_patient (id, patientname, age, 
      sex, address, medicalrecordsid, 
      doctorid, picture, professional, 
      workarea, marriage, nativeplace, 
      national, power, bedid
      )
    values (#{id,jdbcType=VARCHAR}, #{patientname,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{sex,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{medicalrecordsid,jdbcType=VARCHAR}, 
      #{doctorid,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{professional,jdbcType=VARCHAR}, 
      #{workarea,jdbcType=VARCHAR}, #{marriage,jdbcType=VARCHAR}, #{nativeplace,jdbcType=VARCHAR}, 
      #{national,jdbcType=VARCHAR}, #{power,jdbcType=VARCHAR}, #{bedid,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zzu.zym.common.entity.Patient" >
    insert into t_patient
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="patientname != null" >
        patientname,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="medicalrecordsid != null" >
        medicalrecordsid,
      </if>
      <if test="doctorid != null" >
        doctorid,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="professional != null" >
        professional,
      </if>
      <if test="workarea != null" >
        workarea,
      </if>
      <if test="marriage != null" >
        marriage,
      </if>
      <if test="nativeplace != null" >
        nativeplace,
      </if>
      <if test="national != null" >
        national,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="bedid != null" >
        bedid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="patientname != null" >
        #{patientname,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="medicalrecordsid != null" >
        #{medicalrecordsid,jdbcType=VARCHAR},
      </if>
      <if test="doctorid != null" >
        #{doctorid,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        #{professional,jdbcType=VARCHAR},
      </if>
      <if test="workarea != null" >
        #{workarea,jdbcType=VARCHAR},
      </if>
      <if test="marriage != null" >
        #{marriage,jdbcType=VARCHAR},
      </if>
      <if test="nativeplace != null" >
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="national != null" >
        #{national,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        #{power,jdbcType=VARCHAR},
      </if>
      <if test="bedid != null" >
        #{bedid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zzu.zym.common.entity.Patient" >
    update t_patient
    <set >
      <if test="patientname != null" >
        patientname = #{patientname,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="medicalrecordsid != null" >
        medicalrecordsid = #{medicalrecordsid,jdbcType=VARCHAR},
      </if>
      <if test="doctorid != null" >
        doctorid = #{doctorid,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="professional != null" >
        professional = #{professional,jdbcType=VARCHAR},
      </if>
      <if test="workarea != null" >
        workarea = #{workarea,jdbcType=VARCHAR},
      </if>
      <if test="marriage != null" >
        marriage = #{marriage,jdbcType=VARCHAR},
      </if>
      <if test="nativeplace != null" >
        nativeplace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="national != null" >
        national = #{national,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=VARCHAR},
      </if>
      <if test="bedid != null" >
        bedid = #{bedid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="zzu.zym.common.entity.Patient" >
    update t_patient
    set patientname = #{patientname,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      medicalrecordsid = #{medicalrecordsid,jdbcType=VARCHAR},
      doctorid = #{doctorid,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      professional = #{professional,jdbcType=VARCHAR},
      workarea = #{workarea,jdbcType=VARCHAR},
      marriage = #{marriage,jdbcType=VARCHAR},
      nativeplace = #{nativeplace,jdbcType=VARCHAR},
      national = #{national,jdbcType=VARCHAR},
      power = #{power,jdbcType=VARCHAR},
      bedid = #{bedid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>