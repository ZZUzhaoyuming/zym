<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
  <!-- 加载Spring容器配置 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- Spring容器加载所有的配置文件的路径 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:spring.xml</param-value>
  </context-param>
  <!-- 配置SpringMVC核心控制器,将所有的请求(除了刚刚Spring MVC中的静态资源请求)都交给Spring MVC -->


  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.jpg</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.js</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.gif</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.json</url-pattern>
  </servlet-mapping>


  <servlet>
    <servlet-name>springMvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:spring-mvc.xml</param-value>
    </init-param>
    <!--用来标记是否在项目启动时就加在此Servlet,0或正数表示容器在应用启动时就加载这个Servlet,
    当是一个负数时或者没有指定时，则指示容器在该servlet被选择时才加载.正数值越小启动优先值越高  -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!--为DispatcherServlet建立映射-->
  <servlet-mapping>
    <servlet-name>springMvc</servlet-name>
    <!-- 拦截所有请求,千万注意是(/)而不是(/*) -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- 设置编码过滤器 -->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>


        <!--<!DOCTYPE web-app PUBLIC
                "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
                "http://java.sun.com/dtd/web-app_2_3.dtd" >

        <web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns="http://java.sun.com/xml/ns/javaee"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
                 version="3.0">
          <display-name>Archetype Created Web Application</display-name>
          &lt;!&ndash; Spring和mybatis的配置文件 &ndash;&gt;
          <context-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring.xml</param-value>
          </context-param>





          &lt;!&ndash;Log4j配置&ndash;&gt;
          <context-param>
            <param-name>log4jRefreshInterval</param-name>
            <param-value>60000</param-value>
          </context-param>
          <listener>
            <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
          </listener>




          &lt;!&ndash; 编码过滤器 &ndash;&gt;
          <filter>
            <filter-name>encodingFilter</filter-name>
            <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
            <init-param>
              <param-name>encoding</param-name>
              <param-value>UTF-8</param-value>
            </init-param>

          </filter>

          <filter-mapping>
            <filter-name>encodingFilter</filter-name>
            <url-pattern>/*</url-pattern>
          </filter-mapping>

          &lt;!&ndash;Spring监听器 ApplicationContext 载入 &ndash;&gt;
          <listener>
            <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
          </listener>
          &lt;!&ndash; 防止Spring内存溢出监听器 &ndash;&gt;
          <listener>
            <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
          </listener>


          &lt;!&ndash; Spring MVC 核心配置开始 &ndash;&gt;
          <servlet>
            <servlet-name>mvc-dispatcher</servlet-name>
            <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
            &lt;!&ndash; 可以通过contextConfigLocation来自定义SpringMVC配置文件的位置，如不指定，则默认在WEB-INF目录下，名称为[<servlet-name>]-servlet.xml，
                 此时文件名必须为[<servlet-name>]-servlet.xml，否则会出错&ndash;&gt;
            &lt;!&ndash;以下init-param是自定义SpringMVC的配置文件的位置 &ndash;&gt;
            <init-param>
              <param-name>contextConfigLocation</param-name>
              <param-value>classpath:spring-mvc.xml</param-value>
            </init-param>
            <load-on-startup>1</load-on-startup>
            <async-supported>true</async-supported>

          </servlet>


          &lt;!&ndash; 拦截设置 &ndash;&gt;
          &lt;!&ndash;<servlet-mapping>
            <servlet-name>mvc-dispatcher</servlet-name>
            &lt;!&ndash; 此处可以可以配置成*.do，对应struts的后缀习惯 &ndash;&gt;
            <url-pattern>/</url-pattern>
          </servlet-mapping>&ndash;&gt;
          <servlet-mapping>
                 <servlet-name>mvc-dispatcher</servlet-name>
                 <url-pattern>*.js</url-pattern>
                 <url-pattern>*.css</url-pattern>
                 <url-pattern>/assets/*"</url-pattern>
                 <url-pattern>/images/*</url-pattern>
          </servlet-mapping>
          &lt;!&ndash; Spring MVC 核心配置结束 &ndash;&gt;

          &lt;!&ndash; 配置SESSION超时，单位是分钟 &ndash;&gt;
          <session-config>
            <session-timeout>15</session-timeout>
          </session-config>
        </web-app>-->
